<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	 

	<!-- 开启注解 -->
	<context:annotation-config/>
	<!--  -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
 
	
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/onlinesupermarket?useUnicode=true&amp;characterEncoding=gb2312"/>
		<property name="user" value="root"/>
		<property name="password" value="smj"/>
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="1"/>
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="1"/>	
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="300"/>
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60"/>	
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5"/>	
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60"/>
	</bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mappingResources">
			    <list>
			     
					<value>com/smj/orm/Users.hbm.xml</value>
					<value>com/smj/orm/UserAddress.hbm.xml</value> 
					<value>com/smj/orm/UserSession.hbm.xml</value> 
					<value>com/smj/orm/Region.hbm.xml</value> 
				
			    </list> 
		</property>
		
		<property name="hibernateProperties">
			 <value>
			      hibernate.dialect=org.hibernate.dialect.MySQLDialect
			      hibernate.hbm2ddl.auto=update
			      hibernate.show_sql=true
			      hibernate.format_sql=false
			  </value>
		 </property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!--使用基于注解方式配置事务 	-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<bean id="transactionAttributeSource"
		class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
		<property name="properties">
			<props>
				<prop key="insert*">
					PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT,-RollbackableBizException
				</prop>
				<prop key="create*">
					PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT,-RollbackableBizException
				</prop>
				<prop key="save*">
					PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT,-RollbackableBizException
				</prop>
				<prop key="update*">
					PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT,-RollbackableBizException
				</prop>
				<prop key="modify*">
					PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT,-RollbackableBizException
				</prop>
				<prop key="move*">
					PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT,-RollbackableBizException
				</prop>
				<prop key="del*">
					PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT,-RollbackableBizException
				</prop>
				<prop key="remove*">
					PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT,-RollbackableBizException
				</prop>
				<prop key="*">
					PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
				</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionAttributeSource"
			ref="transactionAttributeSource" />
		<property name="transactionManager"
			ref="transactionManager" />
	</bean>
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!-- 公共基础数据库访问对象 -->
	<bean id="dao" class="com.smj.dao.impl.IBaseDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean>
	<bean name="/merchantAction" class="com.smj.web.action.MerchantAction">   
  	</bean>
  	<bean id="userDao" class="com.smj.dao.impl.UserDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean>
  	<bean name="/userAction" class="com.smj.web.action.UserAction">
  		<property name="userDao" ref="userDao"></property>
  		<!-- <property name="regionDao" ref="regionDao"></property> -->
  	</bean> 
  	 <!-- <bean id="regionDao" class="com.smj.dao.impl.RegionDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean>  
	<bean id="addressDao" class="com.smj.dao.impl.UserAddressDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean>
    
    <bean name="/registerAction" class="com.smj.web.action.RegisterAction">   
 	    <property name="userDao" ref="userDao"></property>   
 	    <property name="regionDao" ref="regionDao"></property>   
 	     <property name="addressDao" ref="addressDao"></property>   
 	</bean>   -->
    
    <bean id="userService" class="com.smj.service.impl.UserServiceImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean>
</beans>